CREATE TABLE Users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(100) NOT NULL UNIQUE,
    email VARCHAR(255) NOT NULL UNIQUE,
    password_hash VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE Accounts (
    account_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    account_name VARCHAR(100) NOT NULL,
    account_type VARCHAR(50) NOT NULL,  -- e.g., checking, savings, credit, etc.
    balance DECIMAL(10, 2) DEFAULT 0.00,
    currency VARCHAR(3) DEFAULT 'USD', -- currency code
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

CREATE TABLE IncomeTransactionCategories (
    category_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    category_name VARCHAR(100) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

CREATE TABLE ExpenseTransactionCategories (
    category_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    category_name VARCHAR(100) NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE
);

CREATE TABLE Budgets (
    budget_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    category_id INT,
    budget_amount DECIMAL(10, 2) NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES ExpenseTransactionCategories(category_id) ON DELETE CASCADE
);

CREATE TABLE RecurringTransactions (
    recurring_transaction_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    account_id INT,
    category_id INT,
    transaction_type ENUM('income', 'expense') NOT NULL,
    amount DECIMAL(10, 2) NOT NULL,
    recurrence_frequency ENUM('daily', 'weekly', 'monthly', 'yearly') NOT NULL,
    next_due_date DATE NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (account_id) REFERENCES Accounts(account_id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES ExpenseTransactionCategories(category_id) ON DELETE CASCADE
);

CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    account_id INT,
    category_id INT,  -- Nullable, can reference either Income or Expense category table
    transaction_type ENUM('income', 'expense') NOT NULL, -- Defines if the transaction is income or expense
    amount DECIMAL(10, 2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (account_id) REFERENCES Accounts(account_id) ON DELETE CASCADE,
    FOREIGN KEY (category_id) REFERENCES ExpenseTransactionCategories(category_id) ON DELETE CASCADE, -- Default foreign key
    -- Use a separate relationship for IncomeTransactionCategories when needed
    CONSTRAINT fk_income_category FOREIGN KEY (category_id) REFERENCES IncomeTransactionCategories(category_id) ON DELETE CASCADE
);


CREATE TABLE Transactions (
    transaction_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT,
    account_id INT,
    income_category_id INT NULL,  -- Nullable, references IncomeTransactionCategories if income
    expense_category_id INT NULL, -- Nullable, references ExpenseTransactionCategories if expense
    transaction_type ENUM('income', 'expense') NOT NULL, -- Defines if the transaction is income or expense
    amount DECIMAL(10, 2) NOT NULL,
    transaction_date TIMESTAMP NOT NULL,
    description TEXT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    
    -- Foreign Key Relationships
    FOREIGN KEY (user_id) REFERENCES Users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (account_id) REFERENCES Accounts(account_id) ON DELETE CASCADE,
    FOREIGN KEY (income_category_id) REFERENCES IncomeTransactionCategories(category_id) ON DELETE CASCADE,
    FOREIGN KEY (expense_category_id) REFERENCES ExpenseTransactionCategories(category_id) ON DELETE CASCADE,
    
    -- Ensure that only one category is set based on transaction_type
    CONSTRAINT chk_category
        CHECK (
            (transaction_type = 'income' AND income_category_id IS NOT NULL AND expense_category_id IS NULL) OR
            (transaction_type = 'expense' AND expense_category_id IS NOT NULL AND income_category_id IS NULL)
        )
);





-- Users Table Insertion
INSERT INTO Users (username, email, password_hash) 
VALUES 
('john_doe', 'john.doe@example.com', 'hashed_password_123'),
('jane_smith', 'jane.smith@example.com', 'hashed_password_456'),
('alex_johnson', 'alex.johnson@example.com', 'hashed_password_789');

-- Accounts Table Insertion
INSERT INTO Accounts (user_id, account_name, account_type, balance, currency) 
VALUES 
(1, 'John\'s Checking', 'checking', 1500.00, 'USD'),
(1, 'John\'s Savings', 'savings', 5000.00, 'USD'),
(2, 'Jane\'s Credit', 'credit', -200.00, 'USD'),
(3, 'Alex\'s Checking', 'checking', 1000.00, 'USD');

-- IncomeTransactionCategories Table Insertion
INSERT INTO IncomeTransactionCategories (user_id, category_name, description) 
VALUES 
(1, 'Salary', 'Monthly salary from employer'),
(2, 'Freelance', 'Freelance income from projects'),
(3, 'Investment Return', 'Dividends from stocks');

-- ExpenseTransactionCategories Table Insertion
INSERT INTO ExpenseTransactionCategories (user_id, category_name, description) 
VALUES 
(1, 'Groceries', 'Monthly grocery expenses'),
(1, 'Utilities', 'Electricity and water bills'),
(2, 'Dining Out', 'Restaurants and takeouts'),
(3, 'Transportation', 'Public transport and car expenses');

-- Budgets Table Insertion
INSERT INTO Budgets (user_id, category_id, budget_amount, start_date, end_date) 
VALUES 
(1, 1, 300.00, '2024-01-01', '2024-01-31'),  -- Budget for Groceries
(1, 2, 150.00, '2024-01-01', '2024-01-31'),  -- Budget for Utilities
(2, 3, 200.00, '2024-01-01', '2024-01-31'),  -- Budget for Dining Out
(3, 4, 100.00, '2024-01-01', '2024-01-31');  -- Budget for Transportation

-- RecurringTransactions Table Insertion
INSERT INTO RecurringTransactions (user_id, account_id, category_id, transaction_type, amount, recurrence_frequency, next_due_date, description) 
VALUES 
(1, 1, 1, 'income', 3000.00, 'monthly', '2024-01-01', 'Monthly salary'),
(2, 3, 3, 'income', 1500.00, 'weekly', '2024-01-04', 'Weekly freelance income'),
(3, 2, 4, 'expense', 100.00, 'monthly', '2024-01-15', 'Monthly transportation cost');

-- Transactions Table Insertion
INSERT INTO Transactions (user_id, account_id, income_category_id, expense_category_id, transaction_type, amount, transaction_date, description) 
VALUES 
(1, 1, 1, NULL, 'income', 3000.00, '2024-01-01 09:00:00', 'Salary for January'),
(2, 2, 2, NULL, 'income', 1500.00, '2024-01-03 10:00:00', 'Freelance work payment'),
(1, 1, NULL, 1, 'expense', 50.00, '2024-01-02 15:30:00', 'Grocery shopping'),
(1, 2, NULL, 2, 'expense', 120.00, '2024-01-04 11:00:00', 'Utility bill payment'),
(2, 3, NULL, 3, 'expense', 30.00, '2024-01-04 13:00:00', 'Dining out at restaurant');

-- Recurring Transaction for Monthly Income
INSERT INTO Transactions (user_id, account_id, income_category_id, expense_category_id, transaction_type, amount, transaction_date, description) 
VALUES 
(1, 1, 1, NULL, 'income', 3000.00, '2024-02-01 09:00:00', 'Monthly salary');

-- Recurring Transaction for Expense
INSERT INTO Transactions (user_id, account_id, income_category_id, expense_category_id, transaction_type, amount, transaction_date, description) 
VALUES 
(1, 2, NULL, 2, 'expense', 120.00, '2024-02-05 11:00:00', 'February Utility bill payment');
